import phe
from phe import paillier
import pickle

import requests
import json


pk = '800495e0070000000000008c0c7068652e7061696c6c696572948c115061696c6c6965725075626c69634b65799493942981947d94288c0167948b810100005ee87e210d5261bedc970ff3af8785a56a99c976159cce5f54332502591c55c06df8666b28c63a369cba24d744df02d279fdeb0a24e21d1c7d5c9cce19b278db7246a3a9280baf3c667c646feb748021efcdbf7e50c2ef2103f779c401f29a0e45b16e57e71bb562b4f90155ef9fe9224d833c9ba2d9a874c0fad3ee86b0fb66b74df692564c39d46377a9381a2059559b2ce917dc07d96819e40ef82abb6e9546b875682a53b8b0d601c9bc6f8f786db76a30a4ec72ad2a4ce4e8dfd592d3faf904b05af1548f69c4521f6b1a9cf5360128bbe06b8217a9a4bce97711fbe6034f9ab6261e1f4a7d545e693b5bdaa2ac61da8b343b0cf1a6bbc35a8f056e2e58995c369664250bef068addb8703fce30d40b8ffc06fd70542dd34da3d5762c519f26abcc2e778d32e86647afe6394a60c29deb2f4df7a4f236606bcf615cb38126587bc2122589f142d57fd00b965fa3647ceb50ee2b8a8a87de537ed2403bf06f02cce41e7f0ee033548d7a9b0dfe89ffba012d17cfa2bcb79e1ae4d3aef880008c016e948b810100005de87e210d5261bedc970ff3af8785a56a99c976159cce5f54332502591c55c06df8666b28c63a369cba24d744df02d279fdeb0a24e21d1c7d5c9cce19b278db7246a3a9280baf3c667c646feb748021efcdbf7e50c2ef2103f779c401f29a0e45b16e57e71bb562b4f90155ef9fe9224d833c9ba2d9a874c0fad3ee86b0fb66b74df692564c39d46377a9381a2059559b2ce917dc07d96819e40ef82abb6e9546b875682a53b8b0d601c9bc6f8f786db76a30a4ec72ad2a4ce4e8dfd592d3faf904b05af1548f69c4521f6b1a9cf5360128bbe06b8217a9a4bce97711fbe6034f9ab6261e1f4a7d545e693b5bdaa2ac61da8b343b0cf1a6bbc35a8f056e2e58995c369664250bef068addb8703fce30d40b8ffc06fd70542dd34da3d5762c519f26abcc2e778d32e86647afe6394a60c29deb2f4df7a4f236606bcf615cb38126587bc2122589f142d57fd00b965fa3647ceb50ee2b8a8a87de537ed2403bf06f02cce41e7f0ee033548d7a9b0dfe89ffba012d17cfa2bcb79e1ae4d3aef880008c076e737175617265948b00030000c9b1748843249bda0f431bd705befb15cc3bad606504e516c91859c7fd5b0ffc8dde53ab8f9bc5f9f8c62069a43924e6d1c5e945b63152bcd11327a36773bac717334232015fd0dfc957feecdcaa03e8c55652c441356abe7292bec56d7a0fd841d565b2cc083d4d7328305382cef218aa9f1c0ad6a4b4dcaa6501138c71661cbd00d2e5ec2ced12bec50ec2358614f2357cf295eba029857240fa1a37b443e68829887b4aff7257cdf2533e839ab2cc5fd934e90d8631cc08944b377031a903ccf79879906d56ea569ef0ce511875522cc54d912722dc8407e936058cafe0d9fab84661ef8b41ec3a93f74ef44211345f33531f25053fb0dadcd7e75b9e4c7188568b7ffe3147a52b009879f6adbf35439fb6921b7b3de517c8ed7dc97c86cab36bb2d72856547ac753a9de91f84e09247a82b26b5cf5bdd6fb30de070191da76570a6fc608fb893ba8907d26b04907817df45351b13ad18c32986103c4227173d3dca8a6f267ac7f21b9ab60128ab22dd61cd4d93532dc1394fb53f55c89b6d2e4839379a0ef6522f9f012a3ad1282d19d85b49ca4b4242e6dcc174ff21d94acb723b98df8e63a47172a8a5a77714dd9a666976616204dd93e5b5f3194f262bb6218d36dd53613aec1b334cc7d03861f308b8361c8a67379d9212d9ba7fb03ffb4b75a06ec41303b2a70a74c7884c4e784a910e5fd2c3d11e7ab11cd81c08bac12eb1fee05d0b4d5d6b0da7316958cb232285f2c65c40131c7c1f98fb832ab6d00df177277bea0a34a76b0af006e64b92c88a6ed21c00bcd25cf47f412d41ac7eeb1f7beb9d555938c39c0599ad8ae88fe56cad06565add2900c502f4eb80fdb18b2d426761cb66d0ee09b44b2c99f6f17d58a1d4eb723b958eb1174b571bb423a07018f1d8edf1dae7ff30003631b1fe12cd218d1ce7b30dde7615a9e4d996d3d20f0af9267e42690432b808fde6b906301348054cbed6caebddc92dba5dafe35011f3e0ff1fc4fcd730e890629e6d1ddcfa4a5c7e90e543a1d40051910b1cde28578e72f9ea829e40b1b7f7a6bf067728997521f833fc14b091667a0f9408c076d61785f696e74948b80010000734d2a0baf7020ea9e320551e5d7818c233343d2b1de447571660c56c85e1c40cf5222790d42bebcdee8b6476c4a569b28ffa3030cf609b4297489ef5d3b284926c28b38b803e5becc7e2125f9268060fa99ead41a96fab5aba728ec55fb88afc1e5241d4d09e7203c53ab71fadf4db6198169dee09d8dd1eaa846fa2c90fecce7195286c76e68f1cb27e3125eb51dc73364f807f4574878084c5afdb893cf31c2927ccdb81be83af25598e9cf2f28cfe77865e14e268f63194cf89f9cdb9b5353ac3a1efbc62f23ec700a79b3de5112ab623ea0ce80b28de13ea3d205a9f7ab6f3392b7b45fc3291ccacd13c94836e475f38311695950e2939673da017a0fc8dd1e1232cc61ae4f022e9f3dd0bf44109cae2f5402ff7a7164466f3647d20e1b35628e990f7d84bba277c28ff7bd18209634f90f6f528cfbbcca2345cb1e9180b7727eebb061d8a56b9c2af003327536cc7e4e704fb9d8d8d7f41b2a46c01350255699a15f2a5af5bbc6d9288904aad8ffe85564b2efe03e3d8ab3f69b8ffd2a75622e'
sk = '800495180f0000000000008c0c7068652e7061696c6c696572948c125061696c6c696572507269766174654b65799493942981947d94288c0a7075626c69635f6b65799468008c115061696c6c6965725075626c69634b65799493942981947d94288c0167948b810100005ee87e210d5261bedc970ff3af8785a56a99c976159cce5f54332502591c55c06df8666b28c63a369cba24d744df02d279fdeb0a24e21d1c7d5c9cce19b278db7246a3a9280baf3c667c646feb748021efcdbf7e50c2ef2103f779c401f29a0e45b16e57e71bb562b4f90155ef9fe9224d833c9ba2d9a874c0fad3ee86b0fb66b74df692564c39d46377a9381a2059559b2ce917dc07d96819e40ef82abb6e9546b875682a53b8b0d601c9bc6f8f786db76a30a4ec72ad2a4ce4e8dfd592d3faf904b05af1548f69c4521f6b1a9cf5360128bbe06b8217a9a4bce97711fbe6034f9ab6261e1f4a7d545e693b5bdaa2ac61da8b343b0cf1a6bbc35a8f056e2e58995c369664250bef068addb8703fce30d40b8ffc06fd70542dd34da3d5762c519f26abcc2e778d32e86647afe6394a60c29deb2f4df7a4f236606bcf615cb38126587bc2122589f142d57fd00b965fa3647ceb50ee2b8a8a87de537ed2403bf06f02cce41e7f0ee033548d7a9b0dfe89ffba012d17cfa2bcb79e1ae4d3aef880008c016e948b810100005de87e210d5261bedc970ff3af8785a56a99c976159cce5f54332502591c55c06df8666b28c63a369cba24d744df02d279fdeb0a24e21d1c7d5c9cce19b278db7246a3a9280baf3c667c646feb748021efcdbf7e50c2ef2103f779c401f29a0e45b16e57e71bb562b4f90155ef9fe9224d833c9ba2d9a874c0fad3ee86b0fb66b74df692564c39d46377a9381a2059559b2ce917dc07d96819e40ef82abb6e9546b875682a53b8b0d601c9bc6f8f786db76a30a4ec72ad2a4ce4e8dfd592d3faf904b05af1548f69c4521f6b1a9cf5360128bbe06b8217a9a4bce97711fbe6034f9ab6261e1f4a7d545e693b5bdaa2ac61da8b343b0cf1a6bbc35a8f056e2e58995c369664250bef068addb8703fce30d40b8ffc06fd70542dd34da3d5762c519f26abcc2e778d32e86647afe6394a60c29deb2f4df7a4f236606bcf615cb38126587bc2122589f142d57fd00b965fa3647ceb50ee2b8a8a87de537ed2403bf06f02cce41e7f0ee033548d7a9b0dfe89ffba012d17cfa2bcb79e1ae4d3aef880008c076e737175617265948b00030000c9b1748843249bda0f431bd705befb15cc3bad606504e516c91859c7fd5b0ffc8dde53ab8f9bc5f9f8c62069a43924e6d1c5e945b63152bcd11327a36773bac717334232015fd0dfc957feecdcaa03e8c55652c441356abe7292bec56d7a0fd841d565b2cc083d4d7328305382cef218aa9f1c0ad6a4b4dcaa6501138c71661cbd00d2e5ec2ced12bec50ec2358614f2357cf295eba029857240fa1a37b443e68829887b4aff7257cdf2533e839ab2cc5fd934e90d8631cc08944b377031a903ccf79879906d56ea569ef0ce511875522cc54d912722dc8407e936058cafe0d9fab84661ef8b41ec3a93f74ef44211345f33531f25053fb0dadcd7e75b9e4c7188568b7ffe3147a52b009879f6adbf35439fb6921b7b3de517c8ed7dc97c86cab36bb2d72856547ac753a9de91f84e09247a82b26b5cf5bdd6fb30de070191da76570a6fc608fb893ba8907d26b04907817df45351b13ad18c32986103c4227173d3dca8a6f267ac7f21b9ab60128ab22dd61cd4d93532dc1394fb53f55c89b6d2e4839379a0ef6522f9f012a3ad1282d19d85b49ca4b4242e6dcc174ff21d94acb723b98df8e63a47172a8a5a77714dd9a666976616204dd93e5b5f3194f262bb6218d36dd53613aec1b334cc7d03861f308b8361c8a67379d9212d9ba7fb03ffb4b75a06ec41303b2a70a74c7884c4e784a910e5fd2c3d11e7ab11cd81c08bac12eb1fee05d0b4d5d6b0da7316958cb232285f2c65c40131c7c1f98fb832ab6d00df177277bea0a34a76b0af006e64b92c88a6ed21c00bcd25cf47f412d41ac7eeb1f7beb9d555938c39c0599ad8ae88fe56cad06565add2900c502f4eb80fdb18b2d426761cb66d0ee09b44b2c99f6f17d58a1d4eb723b958eb1174b571bb423a07018f1d8edf1dae7ff30003631b1fe12cd218d1ce7b30dde7615a9e4d996d3d20f0af9267e42690432b808fde6b906301348054cbed6caebddc92dba5dafe35011f3e0ff1fc4fcd730e890629e6d1ddcfa4a5c7e90e543a1d40051910b1cde28578e72f9ea829e40b1b7f7a6bf067728997521f833fc14b091667a0f9408c076d61785f696e74948b80010000734d2a0baf7020ea9e320551e5d7818c233343d2b1de447571660c56c85e1c40cf5222790d42bebcdee8b6476c4a569b28ffa3030cf609b4297489ef5d3b284926c28b38b803e5becc7e2125f9268060fa99ead41a96fab5aba728ec55fb88afc1e5241d4d09e7203c53ab71fadf4db6198169dee09d8dd1eaa846fa2c90fecce7195286c76e68f1cb27e3125eb51dc73364f807f4574878084c5afdb893cf31c2927ccdb81be83af25598e9cf2f28cfe77865e14e268f63194cf89f9cdb9b5353ac3a1efbc62f23ec700a79b3de5112ab623ea0ce80b28de13ea3d205a9f7ab6f3392b7b45fc3291ccacd13c94836e475f38311695950e2939673da017a0fc8dd1e1232cc61ae4f022e9f3dd0bf44109cae2f5402ff7a7164466f3647d20e1b35628e990f7d84bba277c28ff7bd18209634f90f6f528cfbbcca2345cb1e9180b7727eebb061d8a56b9c2af003327536cc7e4e704fb9d8d8d7f41b2a46c01350255699a15f2a5af5bbc6d9288904aad8ffe85564b2efe03e3d8ab3f69b8ffd2a75628c0170948ac1cd5c49812f650dfd4e13d082ddf775a93ec9dccabe1749a66a39b80e2e83e2d7d5e41292949211b5df5fdff0e7d2eaf77f8f11413d5621292ae2e2466ff1ccb85c2b6f0af8803f6916139299e02a79e8a028d249dfa514baad31a14bfa22a6746450a9721824b0e06812234e038c1d1cbdcf2a57634ecae6b085f9db699cb6d14dfa5f6fae33382dc896b516ab7129281f64a5bea8346ff7c7df4b0c0e85136654ec3df4cdfbe37ffd6dcf0f1cd3045b0206ef82668c9323a6334a00bf2da2a7008c0171948ac1d1b9b232848b1f82a2e4cb50bd8db1f93bbef5615009e15e363810fc439c036b12d494b7c11705a0e8764470c6eb0e9d9e994baebfffb294be7759af95a8ba860f46c4a3557876523939e7e2c6da3648da957463f881fa588df9ab25657f6b67cb1e6d72d6897c87136303fb3e500d4b3dd28adc4d6477351a0df848c58ec2f8ca26e1364585e8b9bfdd095caeec15552e8b932c69202073a00fdeab95cf72b50f92dec2aacfee652fe2193d28dffdcb93d2f7fb70b40b64ed4448d8f920f5c4008c0770737175617265948b8001000029fc8da8d2d9463ca1a2f701409af21edae8ed6a22ec36f1d2b3fcd035982247bc85b5f2a18e9456e6c8522231f248b0ce142c87f20c6329dd3654411b38ae1bd750399ff241b0a29550a587b499c678ce68872d4497d06ffca66285309c421205b273723b6b2023226e0ad4e440b55a2f29143f4d0ab339a9ce2377557070de8d7b71b152911136fe032f744f57d4efbfae0ad440990e7e28808b2ad941fe81b82c34d1702aa2306a4a7c8d4fe120a6e946dfa56b7b8240b4d1bbde26e4c618849271f8d4b94a6cae6d9767e10019f086c1375967fd4c99122e6ba380e92a0670637600cc362daa0ceb25af41aa16a66bd2db62245d19da0f67f865b920797162f8d164746f5e801d88a44b9ae36769088dbe523421f4adb2f0ca5c05218d6029e85f5371ac094fdb624f4ef9cd2d798de0edf947cdfe864b82b48cfddb12be67edd180b93b84a1fe74fccc539554bb63df099132716725e2b035c1462906471165b4a9e180150cfae1d465c8950334a64a914cd81791a5e7e149206dfec46d8c0771737175617265948b81010000a1bc8391e4e2c0acd713303063cf84472a402fa753d381afddb86a66bc7db143432a8cc9244dbc76dec3f1555033349ec91bad65bc8fe6da728ce35f2f98561490918413330f44297bcaa66e88cdf8727c406280819d5df25220cba03b4baa7ba667f606e889ec72f2c5cfaecc5325fc4dc6fbe34b77fc67fe0cf3200fa4dee6f94f86cf3b98a9b47885969decbfefe2aa5e0cf670129ad878ee4fcd7515fdf0b766fed47d0a2e29440b1b83f5ac21735b5e14ca64a0c9a4ba26afea3278dd571d54943fe250e1c7aa6df634b3b02a1bc7d56490f37b9c7116bbbd02af04486bddd657e6ab6be931527919e9ee5d24b972cbe2aec279b1859ccbd9647ac52e6af4a456d894d2d7ed64a2a8671b45156ff06adb0bdb81394470b6cec0fbb94a6fe931dd3c26937647f6de3bcf51b58da521816d0959c02fb55c50b6aec45fc7d0e325d802e53765e2b2bdaa391afb218059e1b22597784a0083c2a6e41a10e732cf600e042b1d1959daaa125e74fb5e41f005e25e3be21ef4c70da6b536458897008c09705f696e7665727365948ac086a93212ecbd23eb658a8e765d273bacd16117cef1bd6f65b92e9b5f0615dc5eb8eb0b3e7798e4e3c1851c72f770732ba97c8f79c15aadd041adf4f6f51374b225bccf5fffdd1a6582fb5664d24a94e88efdcd7b144c6548ce95d23c4c782a0f95c0e539e1699c4fb3bdd57da1799f4b1f4be856cf271caa34b55d960adc652ade128d9335b7b087a51f5af2711ccaa368590d3125259e9d22642ec77eb701e764c14fa88e98efdef5b55efa50120393b799b37d2a96620cc813b70fe4bde2428c026870948ac0bd696a782e4084975a6d023e4877cc5ebc4f9d71a64bc43af4c82b9daaa05851a34aabc3ef4766306c30a30af4b6f1b9d33cd2555034330796f0f7404986cea553d6a71e9dbc457b73c650bea390bb9c1f1dabb5f8be899f00e8c66ee2f619defaea76fc76a27226bed9f77513e91c7d028cb999a33bb5b183421f2c2a6f0ca7c1bb7c9f65406436380031bc27af0edafb7658a43cc88402df85bb97eed62706a9fd7203fd033678a3e9753b5270195a1fb8ab1283dac86c8c100588176ced388c026871948ac14b10802098cdfb963c5a3dda5f66764d6a5cde935e4b71f97c09759c3d87270c5ae888794a7f20bc26f127fece7a9b71f51cbc34fea405c47cca64b89f9446d4e989f443569a5bedb63d907ef48fa25f4b98a6e7e3359510bf63d9e818074158365e8738f51fe03760a52d7d9dd66dff1d87a2857e3c5b8be5579ab2bab25cceec1354a30fce37321abeaf693cd04bb1c53186fb43fb81d57dabafe4161871ceaad08e1a1c37ff86392cbb42d7ccfa38dc38447e461ea957253191c8156312820075622e'

base_url = "http://192.168.43.92:8000"


def compute_data(url, payload):
    payload = json.dumps(payload)
    headers = {
        'Content-Type': 'application/json'
    }

    response = requests.request("POST", url, headers=headers, data=payload)

    # print(response.status_code)
    # print(response.text)
    return response.json()


def decodePHE(li, sk):
    sk = pickle.loads(bytes.fromhex(sk))
    li2 = list()
    for i in li:
        li2.append(sk.decrypt(pickle.loads(bytes.fromhex(i))))
    return li2


def encodePHE(li, pk):
    pk = pickle.loads(bytes.fromhex(pk))
    li2 = list()
    for i in li:
        li2.append(pickle.dumps(pk.encrypt(i)).hex())
    return li2


def get_TLC(li=[55, 1]):
    url = f"{base_url}/TLC"
    # url = "http://192.168.43.92:8000/TLC"
    encoded_data = encodePHE(li, pk)
    payload = {
        "params": {
            "x": encoded_data[0],
            "y": encoded_data[1]
        }
    }
    data = compute_data(url, payload)
    if data:
        return decodePHE([data['ans']], sk)[0]
    return None


def get_MHR(li=[55, 1]):
    url = f"{base_url}/MHR"
    encoded_data = encodePHE(li, pk)
    payload = {
        "params": {
            "x": encoded_data[0],
            "y": encoded_data[1]
        }
    }
    data = compute_data(url, payload)
    if data:
        return decodePHE([data['ans']], sk)[0]
    return None


print(get_MHR(li=[55, 1]))
print(get_TLC(li=[55, 1]))
